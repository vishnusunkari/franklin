<?xml version="1.0" encoding="UTF-8"?>
<!-- web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" 
						   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
						   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" -->
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
    					http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">	
	<display-name>ecf</display-name>

	 <!-- By default the following listener will look for a file named applicationContext.xml
	 	in the WEB-INF dir. But with the help of the parameter 'contextConfigLocation' the
	 	default location can be overridden. Even multiple Configuration Files each containing 
	 	separate piece of Information is also possible.  Look inside context-param tag -->		
	 <listener>
 		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	 </listener>
	 
	 <!-- LDAPClient is a Timertask thread which implements ServletContextListener.
	     Since it is a timertask thread it is configured to run per regular intervals
	     as defined in the java class -->
	 <listener>
	    <listener-class>edu.franklin.eac.ldap.LDAPClient</listener-class>
	 </listener>
	 
	 <!-- The following is used when you want to change the scope of the controller objects -->
	 <!--  listener>
 		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	 < / listener -->

	<!-- Publishes events for session creation and destruction through the application context. 
		 Optional unless concurrent session control is being used.  -->  
    <!-- listener>  
      <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>    
    <listener -->  


	 <!-- context-param>
	 	<param-name>log4jConfigLocation</param-name>
	 	<param-value>/WEB-INF/log4j.xml</param-value>
	 </context-param>
	 <context-param>
	 	<param-name>log4jRefreshInterval</param-name>
	 	<param-value>1000</param-value>
	 </context-param -->

	 <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring-security.xml
			/WEB-INF/applicationContext.xml
		</param-value>
	</context-param>

	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	

  	<!-- By default, the DispatcherServlet looks for an XML file named servlet-name-servlet.xml in the WEB-INF
		 directory. In this case, it'll find and load the action-servlet.xml once you create it. This file 
		 contains all of the web controllers and settings used in z-spring-ldap. -->	 	 
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.html</url-pattern>		
	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
 		<error-code>404</error-code>
	 	<location>/404.jsp</location>
	</error-page>
 
	<error-page>
 		<error-code>500</error-code>
	 	<location>/error.htm</location>
	</error-page>
 	
 	<jsp-config>
 		<taglib>
			<taglib-uri>/WEB-INF/fmt</taglib-uri>
		    <taglib-location>/WEB-INF/tld/fmt.tld</taglib-location>
		</taglib>
		<taglib>
			<taglib-uri>/WEB-INF/c</taglib-uri>
			<taglib-location>/WEB-INF/tld/c.tld</taglib-location>
		</taglib>	
		<taglib>
			<taglib-uri>/WEB-INF/sql</taglib-uri>
			<taglib-location>/WEB-INF/tld/sql.tld</taglib-location>
		</taglib>	
	</jsp-config>
	<!--  session-config>
		<session-timeout>30</session-timeout>
	</session-config -->	
</web-app>
